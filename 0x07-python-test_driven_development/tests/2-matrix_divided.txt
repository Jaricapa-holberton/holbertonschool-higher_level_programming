=================================
How use 2-matrix_divided function
=================================

=====
Usage
=====

--------------------
Import the function:
--------------------

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

-----------------------
Test for Success Cases:
-----------------------

Tests for Positive Numbers.
    >>> s1 = [[10, 7, 3.5], [2.5, 1, 9], [0, 5.1, 7]]
    >>> [matrix_divided(s1, 3)]
    [[3.33, 2.33, 1.17], [0.83, 0.33, 3.00], [0.00, 1.70, 2.33]]

Tests for Negative Numbers.
    >>> s2 = [[10, -7, 3.5], [-2.5, 1, 9], [0, 5.1, -7]]
    >>> [matrix_divided(s2, 3)]
    [[3.33, -2.33, 1.17], [-0.83, 0.33, 3.00], [0.00, 1.70, -2.33]]

Tests for a vector (no matrix).
    >>> s4 = [[1, 2, 3]]
    >>> [matrix_divided(s4, 3)]
    [[0.33, 0.67, 1.00]]

    >>> s5 = [[1], [2], [3]]
    >>> [matrix_divided(s5, 3)]
    [[0.33], [0.672], [1.00]]

-----------------
Test Error Cases.
-----------------

Tests for matrix is not a list.
    >>> e1 = {'a': 1, 'b': '2'}
    >>> [matrix_divided(e1, 3)]
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Tests for matrix is not a list of list.
    >>> e2 = [[1, 2.68], "Breakfast", 1]
    >>> [matrix_divided(e2, 3)]
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Tests for all elements are int or float.
    >>> e3 = [[1, 2.68], [0, 'b'], ['a', 3]]
    >>> [matrix_divided(e3, 3)]
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Tests for matrix = None.
    >>> e4 = None
    >>> [matrix_divided(e4, 3)]
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Tests for div = None.
    >>> e5 = [[10, 7, 3.5], [2.5, 1, 9], [0, 5.1, 7]]
    >>> [matrix_divided(e5, None)]
    Traceback (most recent call last):
    TypeError: div must be a number

Tests for matrix = None and div = None.
    >>> e6 = None
    >>> [matrix_divided(e6, None)]
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Tests for div is zero.
    >>> e7 = [[10, 7, 3.5], [2.5, 1, 9], [0, 5.1, 7]]
    >>> [matrix_divided(e7, 0)]
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Tests for matrix with list with diferent lenght.
    >>> e8 = [[1, 2],[2, 3],[4]]
    >>> [matrix_divided(e8, 3)]
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

---------------------------------
Pep8 style:
---------------------------------

    >>> import os
    >>> os.popen("pep8 2-matrix_divided.py").read()
    ''